// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: finder.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	mi := &file_finder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Stock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	mi := &file_finder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{1}
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Chance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stock *Stock `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"`
	Model *Model `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *Chance) Reset() {
	*x = Chance{}
	mi := &file_finder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chance) ProtoMessage() {}

func (x *Chance) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chance.ProtoReflect.Descriptor instead.
func (*Chance) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{2}
}

func (x *Chance) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *Chance) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

type Chances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chances []*Chance `protobuf:"bytes,1,rep,name=chances,proto3" json:"chances,omitempty"`
}

func (x *Chances) Reset() {
	*x = Chances{}
	mi := &file_finder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chances) ProtoMessage() {}

func (x *Chances) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chances.ProtoReflect.Descriptor instead.
func (*Chances) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{3}
}

func (x *Chances) GetChances() []*Chance {
	if x != nil {
		return x.Chances
	}
	return nil
}

type MarketStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date             string            `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	MarketIndex      *MarketIndex      `protobuf:"bytes,2,opt,name=market_index,json=marketIndex,proto3" json:"market_index,omitempty"`
	MarketStockCount *MarketStockCount `protobuf:"bytes,3,opt,name=market_stock_count,json=marketStockCount,proto3" json:"market_stock_count,omitempty"`
}

func (x *MarketStatus) Reset() {
	*x = MarketStatus{}
	mi := &file_finder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketStatus) ProtoMessage() {}

func (x *MarketStatus) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketStatus.ProtoReflect.Descriptor instead.
func (*MarketStatus) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{4}
}

func (x *MarketStatus) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MarketStatus) GetMarketIndex() *MarketIndex {
	if x != nil {
		return x.MarketIndex
	}
	return nil
}

func (x *MarketStatus) GetMarketStockCount() *MarketStockCount {
	if x != nil {
		return x.MarketStockCount
	}
	return nil
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value      float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	HasChanged float64 `protobuf:"fixed64,2,opt,name=has_changed,json=hasChanged,proto3" json:"has_changed,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_finder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{5}
}

func (x *Point) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Point) GetHasChanged() float64 {
	if x != nil {
		return x.HasChanged
	}
	return 0
}

type MarketIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShangZheng  *Point `protobuf:"bytes,1,opt,name=shang_zheng,json=shangZheng,proto3" json:"shang_zheng,omitempty"`
	ShenZheng   *Point `protobuf:"bytes,2,opt,name=shen_zheng,json=shenZheng,proto3" json:"shen_zheng,omitempty"`
	ChuangYe    *Point `protobuf:"bytes,3,opt,name=chuang_ye,json=chuangYe,proto3" json:"chuang_ye,omitempty"`
	BeiZheng_50 *Point `protobuf:"bytes,4,opt,name=bei_zheng_50,json=beiZheng50,proto3" json:"bei_zheng_50,omitempty"`
	KeChuang_50 *Point `protobuf:"bytes,5,opt,name=ke_chuang_50,json=keChuang50,proto3" json:"ke_chuang_50,omitempty"`
}

func (x *MarketIndex) Reset() {
	*x = MarketIndex{}
	mi := &file_finder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketIndex) ProtoMessage() {}

func (x *MarketIndex) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketIndex.ProtoReflect.Descriptor instead.
func (*MarketIndex) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{6}
}

func (x *MarketIndex) GetShangZheng() *Point {
	if x != nil {
		return x.ShangZheng
	}
	return nil
}

func (x *MarketIndex) GetShenZheng() *Point {
	if x != nil {
		return x.ShenZheng
	}
	return nil
}

func (x *MarketIndex) GetChuangYe() *Point {
	if x != nil {
		return x.ChuangYe
	}
	return nil
}

func (x *MarketIndex) GetBeiZheng_50() *Point {
	if x != nil {
		return x.BeiZheng_50
	}
	return nil
}

func (x *MarketIndex) GetKeChuang_50() *Point {
	if x != nil {
		return x.KeChuang_50
	}
	return nil
}

type MarketStockCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rise      int64 `protobuf:"varint,2,opt,name=rise,proto3" json:"rise,omitempty"`
	RiseGt_7  int64 `protobuf:"varint,3,opt,name=rise_gt_7,json=riseGt7,proto3" json:"rise_gt_7,omitempty"`
	RiseGt_15 int64 `protobuf:"varint,4,opt,name=rise_gt_15,json=riseGt15,proto3" json:"rise_gt_15,omitempty"`
	Fell      int64 `protobuf:"varint,5,opt,name=fell,proto3" json:"fell,omitempty"`
	FellGt_7  int64 `protobuf:"varint,6,opt,name=fell_gt_7,json=fellGt7,proto3" json:"fell_gt_7,omitempty"`
	FellGt_15 int64 `protobuf:"varint,7,opt,name=fell_gt_15,json=fellGt15,proto3" json:"fell_gt_15,omitempty"`
}

func (x *MarketStockCount) Reset() {
	*x = MarketStockCount{}
	mi := &file_finder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketStockCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketStockCount) ProtoMessage() {}

func (x *MarketStockCount) ProtoReflect() protoreflect.Message {
	mi := &file_finder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketStockCount.ProtoReflect.Descriptor instead.
func (*MarketStockCount) Descriptor() ([]byte, []int) {
	return file_finder_proto_rawDescGZIP(), []int{7}
}

func (x *MarketStockCount) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MarketStockCount) GetRise() int64 {
	if x != nil {
		return x.Rise
	}
	return 0
}

func (x *MarketStockCount) GetRiseGt_7() int64 {
	if x != nil {
		return x.RiseGt_7
	}
	return 0
}

func (x *MarketStockCount) GetRiseGt_15() int64 {
	if x != nil {
		return x.RiseGt_15
	}
	return 0
}

func (x *MarketStockCount) GetFell() int64 {
	if x != nil {
		return x.Fell
	}
	return 0
}

func (x *MarketStockCount) GetFellGt_7() int64 {
	if x != nil {
		return x.FellGt_7
	}
	return 0
}

func (x *MarketStockCount) GetFellGt_15() int64 {
	if x != nil {
		return x.FellGt_15
	}
	return 0
}

var File_finder_proto protoreflect.FileDescriptor

var file_finder_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x62, 0x72, 0x61, 0x69, 0x6e, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x50, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x32, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xa0, 0x01,
	0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0b, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x45, 0x0a, 0x12, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x3e, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x22, 0xf4, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x2d, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x5f, 0x7a, 0x68, 0x65, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x65, 0x6e, 0x67, 0x12,
	0x2b, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x6e, 0x5f, 0x7a, 0x68, 0x65, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x09, 0x73, 0x68, 0x65, 0x6e, 0x5a, 0x68, 0x65, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x09,
	0x63, 0x68, 0x75, 0x61, 0x6e, 0x67, 0x5f, 0x79, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x63,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x59, 0x65, 0x12, 0x2e, 0x0a, 0x0c, 0x62, 0x65, 0x69, 0x5f, 0x7a,
	0x68, 0x65, 0x6e, 0x67, 0x5f, 0x35, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x62, 0x65, 0x69,
	0x5a, 0x68, 0x65, 0x6e, 0x67, 0x35, 0x30, 0x12, 0x2e, 0x0a, 0x0c, 0x6b, 0x65, 0x5f, 0x63, 0x68,
	0x75, 0x61, 0x6e, 0x67, 0x5f, 0x35, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x6b, 0x65, 0x43,
	0x68, 0x75, 0x61, 0x6e, 0x67, 0x35, 0x30, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x69, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x69, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x67,
	0x74, 0x5f, 0x37, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x69, 0x73, 0x65, 0x47,
	0x74, 0x37, 0x12, 0x1c, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x67, 0x74, 0x5f, 0x31, 0x35,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x69, 0x73, 0x65, 0x47, 0x74, 0x31, 0x35,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x66, 0x65, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x09, 0x66, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x74, 0x5f,
	0x37, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x65, 0x6c, 0x6c, 0x47, 0x74, 0x37,
	0x12, 0x1c, 0x0a, 0x0a, 0x66, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x74, 0x5f, 0x31, 0x35, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x65, 0x6c, 0x6c, 0x47, 0x74, 0x31, 0x35, 0x32, 0xcf,
	0x01, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x13, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x13, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x12,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x0e, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_finder_proto_rawDescOnce sync.Once
	file_finder_proto_rawDescData = file_finder_proto_rawDesc
)

func file_finder_proto_rawDescGZIP() []byte {
	file_finder_proto_rawDescOnce.Do(func() {
		file_finder_proto_rawDescData = protoimpl.X.CompressGZIP(file_finder_proto_rawDescData)
	})
	return file_finder_proto_rawDescData
}

var file_finder_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_finder_proto_goTypes = []any{
	(*Stock)(nil),                  // 0: brain.Stock
	(*Model)(nil),                  // 1: brain.Model
	(*Chance)(nil),                 // 2: brain.Chance
	(*Chances)(nil),                // 3: brain.Chances
	(*MarketStatus)(nil),           // 4: brain.MarketStatus
	(*Point)(nil),                  // 5: brain.Point
	(*MarketIndex)(nil),            // 6: brain.MarketIndex
	(*MarketStockCount)(nil),       // 7: brain.MarketStockCount
	(*wrapperspb.StringValue)(nil), // 8: google.protobuf.StringValue
}
var file_finder_proto_depIdxs = []int32{
	0,  // 0: brain.Chance.stock:type_name -> brain.Stock
	1,  // 1: brain.Chance.model:type_name -> brain.Model
	2,  // 2: brain.Chances.chances:type_name -> brain.Chance
	6,  // 3: brain.MarketStatus.market_index:type_name -> brain.MarketIndex
	7,  // 4: brain.MarketStatus.market_stock_count:type_name -> brain.MarketStockCount
	5,  // 5: brain.MarketIndex.shang_zheng:type_name -> brain.Point
	5,  // 6: brain.MarketIndex.shen_zheng:type_name -> brain.Point
	5,  // 7: brain.MarketIndex.chuang_ye:type_name -> brain.Point
	5,  // 8: brain.MarketIndex.bei_zheng_50:type_name -> brain.Point
	5,  // 9: brain.MarketIndex.ke_chuang_50:type_name -> brain.Point
	8,  // 10: brain.Finder.ReportDaily:input_type -> google.protobuf.StringValue
	8,  // 11: brain.Finder.ReportWeek:input_type -> google.protobuf.StringValue
	8,  // 12: brain.Finder.FindPossibleChance:input_type -> google.protobuf.StringValue
	4,  // 13: brain.Finder.ReportDaily:output_type -> brain.MarketStatus
	4,  // 14: brain.Finder.ReportWeek:output_type -> brain.MarketStatus
	3,  // 15: brain.Finder.FindPossibleChance:output_type -> brain.Chances
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_finder_proto_init() }
func file_finder_proto_init() {
	if File_finder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_finder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_finder_proto_goTypes,
		DependencyIndexes: file_finder_proto_depIdxs,
		MessageInfos:      file_finder_proto_msgTypes,
	}.Build()
	File_finder_proto = out.File
	file_finder_proto_rawDesc = nil
	file_finder_proto_goTypes = nil
	file_finder_proto_depIdxs = nil
}
